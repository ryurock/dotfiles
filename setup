#!/usr/bin/env bash

set -e
voiceverbose=0
while getopts :v OPT
do
  case $OPT in
    v ) voiceverbose=1 ;;
    * ) echo "Usage: $CMDNAME [-v voiceverbose]" 1>&2
        exit 1 ;;
  esac
done

#
# voice and stdout method
#
vecho() {
    if [ ${voiceverbose} = 1 ]; then
        return
    fi

    echo $1$2
    say -v Alex $2
}

#
# initialize
#
init() {
    # OS from OSX 
    if [ `uname` != "Darwin" ]; then
        echo "[Failed] this installer OSX only."
        exit
    fi

    vecho "[Alex]" "Welcome to app development.This that are running this command is the first step that you have to participate in the development of the now this apps. Let's first learn how this apps while speaking with me is going to the development and use any tool "

    # Chcek XCode installed
    if ! [ -e /Applications/Xcode.app ]; then
        echo "[Install] not installed."
        echo "get AppStore. Download App XCode"
        exit 1
    else
        echo "[Install] Already exists dependecy XCode"
    fi

    # XCode Commandline Tool Install
    if ! [ `clang --help | grep -c "clang LLVM compiler"` -eq 1 ]; then
        echo "[Install] not installed. XCode Commandline Tools. open install notify"
        xcode-select --install
        exit 1
    else
        echo "[Install] Already exists dependecy XCode Commandline Tools."
    fi

    vecho "[Alex]" "dependecy comanndline git. try install git"
    brew install git || true
}

#
# create shell dotfile
#
create_shell_dotfile() {
    shell_dotfile=".zshrc"
    if [ `echo $SHELL | grep -c "bash"` -eq 1 ]; then
        shell_dotfile="$HOME/.bash_profile"
    fi
    if ! [ -e $HOME"/${shell_dotfile}" ]; then
        touch $HOME"/${shell_dotfile}"
    fi
}

#
# homebrew setup
#
brewSetup() {
    vecho "[Alex]" "First to homebrew is I'll make sure you have installed"
    # Homebrew install
    if ! which brew >/dev/null 2>&1; then
        echo "[Install] dependency Homebrew"
        ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
        command_ver=$(brew --version)
        command=$(which brew)
        brew doctor
        echo "[Install] installed Homebrew. path : ${command} version : ${command_ver}"
    else
        echo "[Install] Already exists dependency Homebrew"
    fi
}

#
# python setup
#
pythonSetup() {
    create_shell_dotfile
    grepWord="pyenv"
    if [ `brew list | grep -c "${grepWord}"` -eq 0 ]; then
        vecho "[Alex]" "configration python pyenv added $HOME/${shell_dotfile}"
        echo 'export PYENV_ROOT="$HOME/.pyenv"' >> $HOME"/${shell_dotfile}"
        echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> $HOME"/${shell_dotfile}"
        echo 'if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi' >> $HOME"/${shell_dotfile}"
        if [ `echo $SHELL | grep -c "zsh"` -eq 1 ]; then
            sed -e 's/pyenv init -/pyenv init - zsh/g' $HOME"/${shell_dotfile}" > $HOME"/${shell_dotfile}"
        fi

    fi

    vecho "[Alex]" "dependecy comanndline pyenv. try install pyenv"
    brew install pyenv || true
    python_version="2.7.10"
    if [ `pyenv versions | grep -c "${python_version}"` -eq 0 ]; then
        pyenv install ${python_version}
        pyenv global ${python_version}
        pyenv rehash
    fi
}

#
# setup ansible
#
ansibleSetup() {
    vecho "[Alex]" "It will do the installation because it requires some pip module in ansible of dependency"
    sudo easy_install pip
    sudo pip install paramiko PyYAML Jinja2 httplib2 six
    vecho "[Alex]" "dependecy comanndline ansible. try install ansible"
    brew install ansible || true

    if ! [ -e ~/ansible_hosts ]; then
        vecho "[Alex]" "configration ansible added ansible_hosts"
        echo "127.0.0.1" >> ~/ansible_hosts
    fi

    create_shell_dotfile
    grepWord="export ANSIBLE_INVENTORY"
    if [ `cat $HOME"/${shell_dotfile}" | grep -c "${grepWord}"` -eq 0 ]; then
        vecho "[Alex]" "configration ansible added $HOME${shell_dotfile}"
        echo "export ANSIBLE_INVENTORY=~/ansible_hosts" >> $HOME"${shell_dotfile}"
    fi
}

#
# main
#

init
brewSetup
pythonSetup
ansibleSetup
